// Copyright (c) 2014, 2020, Oracle and/or its affiliates.  Licensed under The Universal Permissive License (UPL), Version 1.0 as shown at https://oss.oracle.com/licenses/upl/

// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// WARNING: do not directly import this file, instead import the 
//          version in your base theme's directory, 
//          for example alta/widgets/_oj.alta.formcontrol.inputtextarea.scss
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

@import "../../../utilities/_oj.utilities.scss";
@import "../../../form-control/themes/base/_oj-form-control.mixins.scss";

  @include module-include-once("common.inputtext") {

    // this file includes classes for ojInputText, ojInputPassword, and ojTextarea,

    // This is to prevent the flash of unstyled content before the html becomes JET components.
    @if $initialVisibility == hidden {
      oj-input-text:not(.oj-complete) {
        visibility: hidden;
      }      
    }

    // This is to prevent the flash of unstyled content before the html becomes JET components.
    @if $initialVisibility == hidden {
      oj-input-password:not(.oj-complete) {
        visibility: hidden;
      }      
    }

    // start/end icon styles
    .oj-inputtext-start,
    .oj-inputtext-end {
      min-height: var(--oj-text-field-inside-height);
      min-width: var(--oj-text-field-inside-height); 
      margin: unset;
    }
    
    // clear icon styles    
    .oj-inputtext .oj-inputtext-clear-icon-btn {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      height: var(--oj-text-field-height);
      width: 25px;
      text-decoration: none;
      cursor: var(--oj-core-cursor-clickable);
    }

    // override background color set in a:active (mobile)
    a.oj-inputtext-clear-icon-btn:active {
      background-color: transparent;
    }

    .oj-inputtext-clear-icon {
      @extend .oj-fwk-icon-cross02;
      color: inherit;
    }

    // No focus ring
    .oj-inputtext .oj-inputtext-clear-icon-btn:focus {
      outline:none;
    }

    // if clear-icon="conditional", we make it visible on focus or hover
    .oj-inputtext.oj-focus .oj-text-field-container.oj-inputtext-clearicon-conditional:not(.oj-form-control-empty-clearicon) .oj-inputtext-clear-icon-btn,
    .oj-inputtext.oj-hover .oj-text-field-container.oj-inputtext-clearicon-conditional:not(.oj-form-control-empty-clearicon) .oj-inputtext-clear-icon-btn {
      visibility: visible;
    }
    
    // hide the icon conditionally
    .oj-inputtext .oj-text-field-container.oj-inputtext-clearicon-conditional .oj-inputtext-clear-icon-btn {
      visibility: hidden;
    }
    
    .oj-text-field-counter .oj-inputtext-counter-el {
      position: relative;
      bottom: -5px;
      @include oj-ltr() {
        right: 5px;
      }
      @include oj-rtl() {
        left: 5px;
      }
    }

    .oj-inputtext .oj-text-field-counter {
      visibility: hidden;
    }
    
    .oj-inputtext.oj-focus .oj-text-field-counter {
      visibility: visible;
    }

    // general css input styles between the components
    .oj-inputtext-input,
    .oj-inputpassword-input,
    .oj-textarea-input {
      // TODO, We need to think about getting rid of this mixin and move the relevant style to 
      // container
      @include oj-form-control-input-css-vars($textAlign: '--oj-input-text-text-align');
      
      width: 100%;
    }

    .oj-inputtext-input.oj-hover,
    .oj-inputpassword-input.oj-hover,
    .oj-textarea-input.oj-hover
    {
      background-color: var(--oj-text-field-bg-color-hover);
    }

    // When size is provided, set width to auto to allow proper sizing
    .oj-inputtext-input[size],
    .oj-inputpassword-input[size],
    .oj-textarea-input[size] 
    {
      width: auto;
    }

    // For text area, height needs to be auto, not 100%
    .oj-textarea .oj-text-field-container
    {
      height: auto;
    }

    // specific css for inputtext-input + inputpassword-input
    .oj-inputtext-input,
    .oj-inputpassword-input
    {
      // Remove the margin in Firefox and Safari.
      margin: 0; 
      
      padding: 0 var(--oj-text-field-padding-horizontal);
      @include oj-form-control-content-no-focus-padding($outputCssVars: true);

    }

    // The oj-form-control-inherit selector on an ancestor indicates that the form control should
    // inherit styles, like width/height/borders/colors/text-alignment, etc. This is used for
    // editable datagrid cells and editable table cells
    // -----------------------------------------------------------------------------------------

    // if a focus border width is set reset it back to 0
    // TODO
    
    .oj-form-control-inherit:not(.oj-form-control-default) .oj-inputtext:not(.oj-disabled):not(.oj-read-only) .oj-inputtext-input:focus, 
    .oj-form-control-inherit:not(.oj-form-control-default) .oj-inputpassword:not(.oj-disabled):not(.oj-read-only) .oj-inputpassword-input:focus, 
    .oj-form-control-inherit:not(.oj-form-control-default) .oj-textarea:not(.oj-disabled):not(.oj-read-only) .oj-textarea-input:focus {
      border-width:0;
    }

    .oj-form-control-inherit:not(.oj-form-control-default) .oj-inputtext .oj-text-field-middle,
    .oj-form-control-inherit:not(.oj-form-control-default) .oj-inputpassword .oj-text-field-middle {
      height: 100%;
    }
  }